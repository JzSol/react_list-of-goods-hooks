{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","reverseList","NONE","sortType","sortItems","goods","visibleGoods","sort","prev","curr","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","activeRemoveButton","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAoB,WAC/B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASH,EAASM,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAIN,IAAaP,EAASc,SACjBF,EAAKG,cAAcF,GAEjBN,IAAaP,EAASgB,OACxBJ,EAAKK,OAASJ,EAAKI,OAGrB,KAGLb,GACFM,EAAaQ,UAIfC,QAAQC,IAAIb,EAAUH,GAEfM,EAOOW,CAAkBpB,EAAiB,CAAEG,aAAYG,aACzDe,EAAqBlB,GAAcG,IAAaP,EAASM,KAE/D,OACE,+BACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAaP,EAASc,WAEpCY,QAAS,kBAAMlB,EAAUR,EAASc,WALpC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAaP,EAASgB,SAEpCU,QAAS,kBAAMlB,EAAUR,EAASgB,SALpC,4BAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfrB,IAEdsB,QAAS,kBAAMrB,GAAaD,IAL9B,qBAUCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPrB,GAAY,GACZG,EAAUR,EAASM,OALvB,sBAaJ,6BACE,6BACGG,EAAMkB,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,gBC/GvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9d70fe1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev, curr) => {\n    if (sortType === SortType.ALPHABET) {\n      return prev.localeCompare(curr);\n      // eslint-disable-next-line\n    } else if (sortType === SortType.LENGTH) {\n      return prev.length - curr.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<{}> = () => {\n  const [isReversed, reverseList] = useState(false);\n  const [sortType, sortItems] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n  const activeRemoveButton = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <body>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => sortItems(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => sortItems(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': isReversed !== true,\n            })}\n            onClick={() => reverseList(!isReversed)}\n          >\n            Reverse\n          </button>\n\n          {activeRemoveButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                reverseList(false);\n                sortItems(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((good) => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    </body>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}