{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isSorted","setIsSorted","isReversed","setIsReversed","activeButton","setActiveButton","activeAlphabetically","setActiveAlphabetically","lengthAct","setlengthAct","className","type","cn","onClick","sortedGoods","sort","a","b","length","reverse","map","item","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KAuCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAaN,IAEfO,QA7CR,WACE,IAAMC,EAAc,YAAIhB,GAAOiB,OAE/BhB,EAASe,GACTb,GAAY,GACZE,GAAc,GACdI,GAAwB,IAkCpB,iCAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaJ,IAClDK,QA5CR,WACE,IAAMC,EAAc,YAAIhB,GAAOiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAE3DnB,EAASe,GACTb,GAAY,GACZE,GAAc,GACdM,GAAa,IAmCT,4BAQA,wBACEE,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaR,IAClDS,QA3CR,WACE,IAAMC,EAAc,YAAIhB,GAAOqB,UAE/BpB,EAASe,GACTX,GAAc,GACdE,GAAgB,IAmCZ,qBAOCL,GAAYE,EACX,wBACES,KAAK,SACLD,UAAU,4BACVG,QA3CV,WAGEd,EAFoBJ,GAGpBM,GAAY,GACZE,GAAc,GACdE,GAAgB,GAChBE,GAAwB,GACxBE,GAAa,IAgCP,mBAOE,QAGN,6BACE,6BACGX,EAAMsB,KAAI,SAACC,GAAD,OACT,6BAAgBA,GAAPA,cCtGrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f28bbf3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isSorted, setIsSorted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [activeButton, setActiveButton] = useState(false);\n  const [activeAlphabetically, setActiveAlphabetically] = useState(false);\n  const [lengthAct, setlengthAct] = useState(false);\n\n  function sortAlphabeticaly() {\n    const sortedGoods = [...goods].sort();\n\n    setGoods(sortedGoods);\n    setIsSorted(true);\n    setIsReversed(false);\n    setActiveAlphabetically(true);\n  }\n\n  function sortByLength() {\n    const sortedGoods = [...goods].sort((a, b) => a.length - b.length);\n\n    setGoods(sortedGoods);\n    setIsSorted(true);\n    setIsReversed(false);\n    setlengthAct(true);\n  }\n\n  function revereList() {\n    const sortedGoods = [...goods].reverse();\n\n    setGoods(sortedGoods);\n    setIsReversed(true);\n    setActiveButton(true);\n  }\n\n  function resetList() {\n    const sortedGoods = goodsFromServer;\n\n    setGoods(sortedGoods);\n    setIsSorted(false);\n    setIsReversed(false);\n    setActiveButton(false);\n    setActiveAlphabetically(false);\n    setlengthAct(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !activeAlphabetically,\n          })}\n          onClick={sortAlphabeticaly}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', { 'is-light': !lengthAct })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !activeButton })}\n          onClick={revereList}\n        >\n          Reverse\n        </button>\n        {isSorted || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetList}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map((item) => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}